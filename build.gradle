plugins{
    id 'java'
    id 'application'
}

repositories{
    mavenCentral()
    maven { url "https://jitpack.io" }
}

dependencies {
   compile (
       'com.google.code.gson:gson:1.7.2',
       'org.yaml:snakeyaml:1.17',
       files('./sqljdbc4.jar'),
       'com.sparkjava:spark-core:2.3',
       'com.zaxxer:HikariCP:2.4.5',
       "org.functionaljava:functionaljava:4.5",
       "org.functionaljava:functionaljava-java8:4.5",
       "org.functionaljava:functionaljava-quickcheck:4.5",
       "org.functionaljava:functionaljava-java-core:4.5",
       "com.univocity:univocity-parsers:1.0.0",
       "io.jsonwebtoken:jjwt:0.6.0",
       "com.github.steve-chavez:xcelite:master-SNAPSHOT",
       "io.fastjson:boon:0.11"
   )
   testCompile (
       'junit:junit:4.12',
       "com.mscharhag.oleaster:oleaster-matcher:0.1.2",
       "com.mscharhag.oleaster:oleaster-runner:0.1.2",
       "org.rapidoid:rapidoid-http-client:5.1.9"
   )

}

mainClassName = "ApplicationServer"

jar {
    manifest {
        attributes "Main-Class": mainClassName
    }
    doFirst {
	    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
}

run {
    systemProperty "file.encoding", "utf-8"
    args "config-local.yml"
}

task test(type: JavaExec, overwrite: true) {
  classpath=sourceSets.main.runtimeClasspath + sourceSets.test.runtimeClasspath

  main = 'MainTest'

  args "config-local.yml"
}

